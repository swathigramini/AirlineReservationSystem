package com.capgemini.airlinereservationsystem1.validation;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Validator {
	public static boolean isStringAlphabet(String str) {
	      return ((str != null) && (!str.equals("")) && (!str.equals("")) && (str.matches("^[a-zA-Z]*$")));

		}
		public static boolean numValidate(String num) {
			if(num.matches("[0-9]+")) {
				return true;
				} 
			return false;
		}
		
		public static Integer validateId(int id) {
			if (id >= 1 && id <= 1000) {
				if (id >= 0) {
					return true;
				} else {
					return false;
				}

			} else {
				return false;
			}

		}

	/*
	 * public static boolean validateId(String validId) { String regex =
	 * "^[a-zA-Z0-9]+$"; Pattern pattern = Pattern.compile(regex); if (validId ==
	 * null) { return false; } else { return pattern.matcher(validId).matches(); } }
	 */

		public static boolean isEmail(String email) {
			String regex = "[[a-zA-Z0-9]+@gmail\\.com";
	     Pattern pat = Pattern.compile(regex);
			if (email == null) {
				return false;
			} else {

				return pat.matcher(email).matches();
			}

		}

		public static boolean isPassword(String password) {
			 String regex = "^[a-zA-Z0-9]+$";
			 Pattern pattern = Pattern.compile(regex);
			if (password == null) {
				return false;
			} else {
				return pattern.matcher(password).matches();
			}
		}

	 public static boolean isName(String txt) {
		 String regx = "[a-zA-Z]+\\.?";
		 Pattern pattern = Pattern.compile(regx, Pattern.CASE_INSENSITIVE);
		 Matcher matcher= pattern.matcher(txt) ;
		 if(txt==null) {
			 return false;
		 }
		return matcher.find();
	 }
	 
	public static boolean dateValidation(String d) {
		SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
		sdf.setLenient(false);
		try {
			Date date = sdf.parse(d);
			Date today = new Date();
			return date.before(today);
		}catch(Exception e){
			return true;
		}
		
	}
	private static  String TIME24HOURS_PATTERN = "([01]?[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]";
	public boolean validateTime( String time) {
	  Pattern  pattern = Pattern.compile(TIME24HOURS_PATTERN);
	  Matcher  matcher = pattern.matcher(time);
	    return matcher.matches();
	}

	public Long validateContact(String contact) {
			Pattern pat = Pattern.compile("\\d{10}");
			Matcher mat = pat.matcher(contact);
			if (mat.matches()) {
				return Long.parseLong(contact);
			} else {
				return null;
			}
		}
	public static boolean validateSeat(int seat) {
		if(seat >= 1 && seat <= 100) {
			if(seat>=0) {
				return true;
			}else {
				return false;
			}
			
		}else {
			return false;
		}
		
	}
	public static boolean validatePrice(double price) {
		if(price >=500 && price <=50000) {
			return true;
		}
		return false;
		
	}
	public static boolean validateAddress(String txt) {
		 String regx = "[a-zA-Z]+\\.?";
		 Pattern pattern = Pattern.compile(regx, Pattern.CASE_INSENSITIVE);
		 Matcher matcher= pattern.matcher(txt) ;
		 if(txt==null) {
			 return false;
		 }
		return matcher.find();
	}
	public static boolean validatePlace(String place) {
		 String regx = "[a-zA-Z]+\\.?";
		 Pattern pattern = Pattern.compile(regx, Pattern.CASE_INSENSITIVE);
		 Matcher matcher= pattern.matcher(place) ;
		 if(place==null) {
		return false;
		
	}
		 return matcher.find();
	}
}
